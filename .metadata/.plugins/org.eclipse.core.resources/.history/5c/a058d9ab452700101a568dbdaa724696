package com.user.management.service;

import java.util.List;
import java.util.Optional;

import org.springframework.stereotype.Service;

import com.user.management.config.JwtProvider;
import com.user.management.exception.UserException;
import com.user.management.model.User;
import com.user.management.repository.UserRepository;

@Service
public class UserServiceImplementation implements UserService {

    private final UserRepository userRepository;

    public UserServiceImplementation(UserRepository userRepository) {
        this.userRepository = userRepository;
    }

    @Override
    public User findUserProfileByJwt(String jwt) throws UserException {
        String email = JwtProvider.getEmailFromJwtToken(jwt);
        User user = userRepository.findByEmail(email);

        if (user == null) {
            throw new UserException("User does not exist with email: " + email);
        }
        return user;
    }

    @Override
    public User findUserByEmail(String email) throws UserException {
        User user = userRepository.findByEmail(email);
        if (user == null) {
            throw new UserException("User does not exist with email: " + email);
        }
        return user;
    }

    @Override
    public User findUserById(Long userId) throws UserException {
        return userRepository.findById(userId)
                .orElseThrow(() -> new UserException("User not found with id: " + userId));
    }

    @Override
    public List<User> findAllUsers() {
        return userRepository.findAll();
    }
}

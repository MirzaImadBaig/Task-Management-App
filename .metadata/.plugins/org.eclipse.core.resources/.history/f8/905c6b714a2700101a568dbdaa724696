package com.user.management.exception;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.RestControllerAdvice;

@RestControllerAdvice
public class GlobalExceptionHandler {

    // Handle BadCredentialsException globally
    @ExceptionHandler(BadCredentialsException.class)
    public ResponseEntity<AuthResponse> handleBadCredentialsException(BadCredentialsException ex) {
        AuthResponse authResponse = new AuthResponse();
        authResponse.setMessage("Invalid credentials");
        authResponse.setStatus(false);
        return new ResponseEntity<>(authResponse, HttpStatus.UNAUTHORIZED); // 401 Unauthorized
    }

    // Handle UserException globally
    @ExceptionHandler(UserException.class)
    public ResponseEntity<AuthResponse> handleUserException(UserException ex) {
        AuthResponse authResponse = new AuthResponse();
        authResponse.setMessage(ex.getMessage());
        authResponse.setStatus(false);
        return new ResponseEntity<>(authResponse, HttpStatus.BAD_REQUEST); // 400 Bad Request
    }

    // Handle other exceptions globally
    @ExceptionHandler(Exception.class)
    public ResponseEntity<ErrorDetails> handleOtherExceptions(Exception ex) {
        ErrorDetails errorDetails = new ErrorDetails(ex.getMessage(), "Unknown error", LocalDateTime.now());
        return new ResponseEntity<>(errorDetails, HttpStatus.INTERNAL_SERVER_ERROR);
    }
}
